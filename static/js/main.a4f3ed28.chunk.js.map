{"version":3,"sources":["template/header.js","template/footer.js","template/layout.js","components/alert/error.js","services/api.js","pages/Home/index.js","pages/About/index.js","pages/Contact/index.js","components/alert/success.js","pages/Inbox/components/settings.js","pages/Inbox/components/card.js","services/websocket.js","pages/Inbox/index.js","Routes.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","borderBottom","palette","divider","toolbar","justifyContent","link","margin","spacing","Header","classes","AppBar","position","color","elevation","className","Toolbar","IconButton","component","RouterLink","to","edge","aria-label","Link","variant","href","Copyright","Typography","align","Date","getFullYear","footer","backgroundColor","background","paper","padding","marginTop","Footer","fontSize","target","root","display","flexDirection","minHeight","Layout","props","showLoadPage","CssBaseline","Fade","in","LinearProgress","children","ErrorAlert","description","open","onClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","axios","create","baseURL","process","main","marginBottom","heroContent","heroButtons","textAlign","Home","useState","errorMessage","setErrorMessage","openAlert","setOpenAlert","setShowLoadPage","history","useHistory","handleOpenAlert","e","a","preventDefault","api","post","response","push","pathname","data","token","state","webhookGenerated","toString","Container","maxWidth","gutterBottom","paragraph","Button","onClick","size","event","reason","About","socialButtons","Contact","SuccessAlert","fab","zIndex","bottom","right","grid","alignItems","Settings","openDialog","setOpenDialog","handleCloseDialog","Fab","Dialog","fullWidth","DialogTitle","id","DialogContent","DialogContentText","Grid","container","item","xs","TextField","value","selector","document","getElementById","focus","select","execCommand","DialogActions","autoFocus","hidden","nested","cardRoot","cardHeader","cardHeaderAvatarGET","cardHeaderAvatarPOST","cardHeaderAvatarPATCH","cardHeaderAvatarPUT","cardHeaderAvatarDELETE","VerticalTabs","setOpen","method","body","query","headers","updatedAt","Object","entries","URLSearchParams","JSON","stringify","Card","CardHeader","avatar","Chip","label","title","subheader","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","CardContent","tabRoot","List","aria-labelledby","ListItem","ListItemText","primary","secondary","button","Collapse","timeout","unmountOnExit","disablePadding","map","header","Divider","socket","io","autoConnect","transports","Listen","requests","setRequests","requestTemp","setRequestTemp","useParams","useEffect","connected","disconnect","opts","connect","get","then","catch","error","message","callback","on","request","Routes","basename","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.a4f3ed28.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    justifyContent: 'space-between',\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" color=\"default\" elevation={1} className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton component={RouterLink} to=\"/\" edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n          <HomeIcon />\n        </IconButton>\n        <nav>\n          <Link component={RouterLink} to=\"/about\" variant=\"button\" color=\"textPrimary\" className={classes.link}>\n            About\n          </Link>\n          <Link href=\"#\" variant=\"button\" color=\"textPrimary\" className={classes.link}>\n            Status\n          </Link>\n          <Link component={RouterLink} to=\"/contact\" variant=\"button\" color=\"textPrimary\" className={classes.link}>\n            Contact\n          </Link>\n        </nav>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      Webhook Tester {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto',\n  },\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n        Built with <FavoriteIcon fontSize=\"small\" /> by <Link href=\"https://dorianneto.com.br/\" target=\"_blank\">Dorian Neto</Link>\n        </Typography>\n      <Copyright />\n    </footer>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Fade from '@material-ui/core/Fade';\n\nimport Header from './header';\nimport Footer from './footer';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n  },\n}));\n\nexport default function Layout(props) {\n  const { showLoadPage } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Fade in={showLoadPage}>\n        <LinearProgress />\n      </Fade>\n      <Header />\n      {props.children}\n      <Footer />\n    </div>\n  );\n}\n","import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nexport default function ErrorAlert(props) {\n  const { description, open, onClose } = props;\n\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        open={open}\n        autoHideDuration={4000}\n        onClose={onClose}\n      >\n        <Alert onClose={onClose} severity=\"error\">\n          {description}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport Layout from '../../template/layout';\nimport ErrorAlert from '../../components/alert/error';\n\nimport api from '../../services/api';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    marginBottom: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n    textAlign: 'center',\n  },\n}));\n\nexport default function Home() {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [showLoadPage, setShowLoadPage] = useState(false);\n\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleOpenAlert = () => {\n    setOpenAlert(true);\n  };\n\n  const handleCloseAlert = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenAlert(false);\n  };\n\n  async function handleGenerateEndpoint(e) {\n    e.preventDefault();\n\n    try {\n      setShowLoadPage(true);\n\n      const response = await api.post('/hooks');\n\n      history.push({\n        pathname: `/in/${response.data.token}`,\n        state: { webhookGenerated: true }\n      });\n    } catch (error) {\n      setErrorMessage(error.toString());\n      setShowLoadPage(false);\n      handleOpenAlert();\n    }\n  }\n\n  return (\n    <Layout showLoadPage={showLoadPage}>\n      <main className={classes.main}>\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Webhook Tester\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Generate a unique URL and be able to debug as many as HTTP requests you need from any provider in real-time, through a clean and focused in what matters interface.\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Button onClick={handleGenerateEndpoint} variant=\"contained\" color=\"primary\" size=\"large\">\n                Generate Webhook\n              </Button>\n            </div>\n          </Container>\n        </div>\n      </main>\n      <ErrorAlert\n        description={errorMessage}\n        open={openAlert}\n        onClose={handleCloseAlert}\n      />\n    </Layout>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport Layout from '../../template/layout';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    marginBottom: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n}));\n\nexport default function About() {\n  const classes = useStyles();\n\n  return (\n    <Layout>\n      <main className={classes.main}>\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              About\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              <strong>Webhook Tester</strong> is an application with a clean and focused on what matters interface whose main goal is to make Webhooks debug easier, it doesn't matter the provider.\n            </Typography>\n          </Container>\n        </div>\n      </main>\n    </Layout>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport LanguageIcon from '@material-ui/icons/Language';\n\nimport Layout from '../../template/layout';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    marginBottom: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  socialButtons: {\n    marginTop: theme.spacing(4),\n    textAlign: 'center',\n  },\n}));\n\nexport default function Contact() {\n  const classes = useStyles();\n\n  return (\n    <Layout>\n      <main className={classes.main}>\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Contact\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Do you want to talk about an error, a new feature, or even talk about a business opportunity?\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Feel free to reach me out through these links:\n            </Typography>\n            <div className={classes.socialButtons}>\n              <IconButton href=\"https://github.com/dorianneto\" target=\"_blank\">\n                <GitHubIcon />\n              </IconButton>\n              <IconButton href=\"https://www.linkedin.com/in/dorianneto\" target=\"_blank\">\n                <LinkedInIcon />\n              </IconButton>\n              <IconButton href=\"https://dorianneto.com.br/\" target=\"_blank\">\n                <LanguageIcon />\n              </IconButton>\n            </div>\n          </Container>\n        </div>\n      </main>\n    </Layout>\n  );\n}\n","import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nexport default function SuccessAlert(props) {\n  const { description, open, onClose } = props;\n\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        open={open}\n        autoHideDuration={4000}\n        onClose={onClose}\n      >\n        <Alert onClose={onClose} severity=\"success\">\n          {description}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport SuccessAlert from '../../../components/alert/success';\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    position: 'fixed',\n    zIndex: 99,\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  grid: {\n    alignItems: 'center',\n  }\n}));\n\nexport default function Settings({ token }) {\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openAlert, setOpenAlert] = useState(false);\n\n  const classes = useStyles();\n\n  const handleOpenDialog = () => {\n    setOpenDialog(true);\n  }\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  }\n\n  const handleOpenAlert = () => {\n    setOpenAlert(true);\n  };\n\n  const handleCloseAlert = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenAlert(false);\n  };\n\n  const copyToClipboard = (e) => {\n    e.preventDefault();\n\n    const selector = document.getElementById('copy-webhook-target');\n    selector.focus();\n    selector.select();\n\n    document.execCommand('copy');\n\n    handleOpenAlert();\n  };\n\n  return (\n    <>\n      <Fab onClick={handleOpenDialog} className={classes.fab} color=\"primary\">\n        <SettingsIcon />\n      </Fab>\n\n      <Dialog\n        open={openDialog}\n        onClose={handleCloseDialog}\n        fullWidth={true}\n        maxWidth=\"sm\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Settings</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <Typography>Payload URL:</Typography>\n            <Grid container spacing={1}>\n              <Grid item xs={10}>\n                <TextField\n                  id=\"copy-webhook-target\"\n                  className={classes.margin}\n                  value={`${process.env.REACT_APP_API_URL}/c/${token}`}\n                  fullWidth={true}\n                />\n              </Grid>\n              <Grid item xs={2}>\n                <IconButton>\n                  <FileCopyIcon color=\"primary\" onClick={copyToClipboard} />\n                </IconButton>\n              </Grid>\n            </Grid>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <SuccessAlert\n        description=\"Copied successfully!\"\n        open={openAlert}\n        onClose={handleCloseAlert}\n      />\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Chip from '@material-ui/core/Chip';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n  hidden: {\n    display: 'none',\n  },\n  nested: {\n    margin: theme.spacing(2, 0),\n    padding: theme.spacing(0, 4),\n    display: 'flex',\n    flexDirection: 'line',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  cardRoot: {\n    margin: theme.spacing(3),\n  },\n  cardHeader: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  cardHeaderAvatarGET: {\n    backgroundColor: 'rgb(172, 160, 242) !important',\n  },\n  cardHeaderAvatarPOST: {\n    backgroundColor: 'rgb(143, 200, 96) !important',\n  },\n  cardHeaderAvatarPATCH: {\n    backgroundColor: 'rgb(229, 202, 30) !important',\n  },\n  cardHeaderAvatarPUT: {\n    backgroundColor: 'rgb(249, 162, 48) !important',\n  },\n  cardHeaderAvatarDELETE: {\n    backgroundColor: 'rgb(240, 109, 107) !important',\n  },\n}));\n\nexport default function VerticalTabs(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  let { id, method, body, query, headers, updatedAt } = props.data;\n\n  headers = headers ? Object.entries(headers) : [];\n  query = query ? new URLSearchParams(Object.entries(query)).toString() : null;\n  body = body ? JSON.stringify(body) : null;\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <Card className={classes.cardRoot}>\n      <CardHeader\n        className={classes.cardHeader}\n        avatar={\n          <Chip className={classes[`cardHeaderAvatar${method}`]} label={method} />\n        }\n        title={`ID: ${id}`}\n        subheader={new Intl.DateTimeFormat(\"en-US\", {\n          year: \"numeric\",\n          month: \"long\",\n          day: \"2-digit\",\n          hour: 'numeric',\n          minute: 'numeric',\n          second: 'numeric',\n        }).format(updatedAt)}\n      />\n      <CardContent className={classes.tabRoot}>\n        <List\n          component=\"nav\"\n          aria-labelledby=\"nested-list-subheader\"\n          className={classes.root}\n        >\n          <ListItem className={body ? null : classes.hidden}>\n            <ListItemText primary=\"Body\" secondary={body} />\n          </ListItem>\n          <ListItem className={query ? null : classes.hidden}>\n            <ListItemText primary=\"Query\" secondary={query} />\n          </ListItem>\n          <ListItem button onClick={handleClick}>\n            <ListItemText primary=\"Headers\" />\n            {open ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {headers.map(header => (\n                <>\n                  <ListItem className={classes.nested}>\n                    <Chip label={header[0]} />\n                    <Typography component=\"div\">{header[1]}</Typography>\n                  </ListItem>\n                  <Divider />\n                </>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n      </CardContent>\n      {/* <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions> */}\n    </Card>\n  );\n}\n","import io from 'socket.io-client';\n\nconst socket = io(process.env.REACT_APP_WEBSOCKET_SERVER_URL, {\n  autoConnect: false,\n  transports: ['websocket']\n});\n\nconst connect = (token) => {\n  socket.io.opts.query = {\n    token\n  };\n\n  socket.connect();\n};\n\nconst disconnect = () => {\n  if (socket.connected) {\n    socket.disconnect();\n  }\n};\n\nconst getMessage = (message, callback) => socket.on(message, callback);\n\nexport {\n  connect,\n  disconnect,\n  getMessage,\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Layout from '../../template/layout';\nimport ErrorAlert from '../../components/alert/error';\nimport Settings from './components/settings';\nimport ListenCard from './components/card';\n\nimport api from '../../services/api';\nimport { connect, disconnect, getMessage } from '../../services/websocket';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    marginBottom: theme.spacing(2),\n  }\n}));\n\nexport default function Listen() {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [requests, setRequests] = useState([]);\n  const [requestTemp, setRequestTemp] = useState([]);\n  const [showLoadPage, setShowLoadPage] = useState(true);\n\n  const classes = useStyles();\n  const { token } = useParams();\n\n  const handleOpenAlert = () => {\n    setOpenAlert(true);\n  };\n\n  const handleCloseAlert = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenAlert(false);\n  };\n\n  useEffect(() => {\n    disconnect();\n    connect(token);\n\n    api.get(`/c/${token}`)\n      .then(response => {\n        setRequests(response.data.data);\n        setShowLoadPage(false);\n      })\n      .catch(error => {\n        setErrorMessage(error.toString());\n        setShowLoadPage(false);\n        handleOpenAlert();\n      });\n  }, []);\n\n  useEffect(() => {\n    getMessage('new-request', data => {\n      setRequestTemp(data);\n      setShowLoadPage(true);\n    });\n  }, []);\n\n  useEffect(() => {\n    setRequests([requestTemp, ...requests]);\n    setShowLoadPage(false);\n  }, [requestTemp]);\n\n  return (\n    <Layout showLoadPage={showLoadPage}>\n      <main className={classes.main}>\n        <Settings token={token} />\n        {requests.map(request => (\n          <ListenCard data={request} />\n        ))}\n      </main>\n      <ErrorAlert\n        description={errorMessage}\n        open={openAlert}\n        onClose={handleCloseAlert}\n      />\n    </Layout>\n  );\n}\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Home from './pages/Home'\nimport About from './pages/About'\nimport Contact from './pages/Contact'\nimport Inbox from './pages/Inbox'\n\nfunction Routes() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/in/:token\">\n          <Inbox />\n        </Route>\n        <Route path=\"/contact\">\n          <Contact />\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './global.css';\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}